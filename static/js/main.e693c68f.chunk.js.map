{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","Button","onClick","preventDefault","text","completed","id","Math","random","style","backgroundColor","color","height","fontSize","variant","size","startIcon","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveToLocal","localStorage","setItem","JSON","stringify","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e693c68f.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nexport default function Form({inputText,setInputText,todos,setTodos,setStatus}) {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  }\r\n  const submitTododHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos, {text: inputText,completed:false,id:Math.random()*1000},\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n    return (\r\n        <div>\r\n             <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <Button onClick={submitTododHandler} style={{backgroundColor: \"#3385ff\", color:\"white\", height:\"54px\", fontSize:\"25px\"}} className=\"todo-button {classes.button}\" type=\"submit\" variant=\"contained\"\r\n        size=\"large\"\r\n        startIcon={<SaveIcon />} >Add\r\n      </Button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"incomplete\">Incomplete</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Todo({text,todo,todos,setTodos}) {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el)=> el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id===todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        } )  )\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \" \"}` }>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\" >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nexport default function TodoList({filteredTodos,todos,setTodos}) {\r\n    console.log(todos);\r\n    return (\r\n        <div>\r\n            <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo)=>(\r\n                    <Todo setTodos={setTodos} todos={todos} todo={todo} text={todo.text} key={todo.id} />\r\n\r\n                ))}\r\n\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react';\nimport './App.css';\n//Importing components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nfunction App() {\n  const [inputText,setInputText] = useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos,setFilteredTodos] = useState([]);\n  useEffect ( () => {\n    getLocalTodos();\n  }, [] );\n  useEffect(()=>{\n    filterHandler();\n    saveToLocal();\n  },[todos,status]);\n  const filterHandler = () => {\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) =>todo.completed === true ));\n        break;\n      case \"incomplete\":\n        setFilteredTodos(todos.filter((todo) =>todo.completed === false ));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  }\n  const saveToLocal = () => {\n    localStorage.setItem(\"todos\",JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"toods\",JSON.stringify([]));\n    }else{\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>My to do list</h1>\n      </header>\n      <Form\n      inputText={inputText}\n      todos={todos}\n      setInputText={setInputText}\n      setTodos={setTodos}\n      setStatus={setStatus}\n      />\n      <TodoList \n      filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}